# Program ---------------------------------------------------------------------
snippet `` file header
	//=============================================================================
	// ■ ${1}
	//-----------------------------------------------------------------------------
	//   ${0}
	//=============================================================================

snippet ` method header
	//-------------------------------------------------------------------------
	// ● ${0}
	//-------------------------------------------------------------------------

snippet program
	#include <stddef.h>
	#include <stdio.h>

	int main(int argc, char* argv[]) {
		${0}
		return 0;
	}

snippet main
	int main(int argc, char* argv[]) {
		${0}
		return 0;
	}

snippet guard ifndef…define…endif
	#ifndef ${1:`toupper(vim_snippets#Filename('$1_H', 'UNTITLED_H'))`}
	#define ${1}
	${0}
	#endif

snippet once
	#pragma once

# Details ---------------------------------------------------------------------
snippet switch
	switch (${1}) {
	case ${2}:
		${0}
		break;
	}

snippet for
	for (int ${1:i} = 0; ${1} < ${2:count}; ${1}++) {
		${0}
	}

snippet getopt
	int choice;
	while (1) {
		static struct option long_options[] = {
			/* Use flags like so:
			{"verbose", no_argument, &verbose_flag, 'V'}*/
			/* Argument styles: no_argument, required_argument, optional_argument */
			{"version", no_argument, 0, 'v'},
			{"help", no_argument, 0, 'h'},
			${1}
			{0, 0, 0, 0}
		};

		int option_index = 0;

		/* Argument parameters:
			no_argument: " "
			required_argument: ":"
			optional_argument: "::" */

		choice = getopt_long(argc, argv, "vh", long_options, &option_index);

		if (choice == -1) break;

		switch (choice) {
		case 'v':
			${2}
			break;
		case 'h':
			${3}
			break;
		case '?':
			/* getopt_long will have already printed an error */
			break;
		default:
			return EXIT_FAILURE;
		}
	}

	/* Deal with non-option arguments here */
	while (optind < argc) {
		${0}
	}
